
def second_largest_value(dictionary):
    sorted_values = sorted(dictionary.values(), reverse=True)
    if len(sorted_values) > 1:
        return sorted_values[1]
    else:
        return None
import heapq

def second_largest_value_heapq(dictionary):
    if len(dictionary) < 2:
        return None
    return heapq.nlargest(2, dictionary.values())[-1]
def second_largest_value_iterative(dictionary):
    first = second = float('-inf')
    for value in dictionary.values():
        if value > first:
            second = first
            first = value
        elif value > second and value != first:
            second = value
    if second == float('-inf'):
        return None
    return second
my_dict = {'a': 10, 'b': 20, 'c': 30, 'd': 15, 'e': 25}
print("Second largest value (Sorting):", second_largest_value(my_dict))
print("Second largest value (Heapq):", second_largest_value_heapq(my_dict))
print("Second largest value (Iterative):", second_largest_value_iterative(my_dict))
